{"version":3,"sources":["logo.svg","images/pn1.jpg","component/panaroma/panaroma.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Panaroma","className","width","height","image","myImage","pitch","yaw","hfov","autoLoad","author","title","orientationOnByDefault","draggable","keyboardZoom","mouseZoom","preview","previewAuthor","previewTitle","showControls","showFullscreenCtrl","showZoomCtrl","onLoad","console","log","onScenechange","id","onScenechangefadedone","onError","err","onErrorcleared","onMousedown","evt","onMouseup","onTouchstart","onTouchend","hotspotDebug","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAAe,I,aCAA,MAA0B,gCC2D1BA,G,MAvDE,WACb,OACE,qBAAKC,UAAU,qBAAf,SACA,cAAC,IAAD,CACAC,MAAM,QACNC,OAAO,QACPC,MAAOC,EACPC,MAAO,GACPC,IAAK,IACLC,KAAM,IACNC,UAAQ,EACRC,OAAO,GACPC,MAAM,GACNC,wBAAwB,EACxBC,WAAS,EACTC,cAAY,EACZC,WAAS,EACTC,QAAQ,GACRC,cAAc,GACdC,aAAa,GACbC,cAAY,EACZC,oBAAkB,EAClBC,cAAY,EACZC,OAAQ,WAAKC,QAAQC,IAAI,oBACzBC,cAAe,SAACC,GAAMH,QAAQC,IAAI,uBAAyBE,IAC3DC,sBAAuB,WAAKJ,QAAQC,IAAI,oBACxCI,QAAS,SAACC,GAAON,QAAQC,IAAI,QAAUK,IACvCC,eAAgB,WAAKP,QAAQC,IAAI,kBACjCO,YAAa,SAACC,GAAOT,QAAQC,IAAI,aAAeQ,IAChDC,UAAW,SAACD,GAAOT,QAAQC,IAAI,WAAYQ,IAC3CE,aAAc,SAACF,GAAOT,QAAQC,IAAI,cAAeQ,IACjDG,WAAY,SAACH,GAAOT,QAAQC,IAAI,YAAaQ,IAC7CI,cAAc,QCzBLC,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.09d8ebdb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/pn1.93268dd5.jpg\";","import { Pannellum, PannellumVideo } from \"pannellum-react\";\r\nimport React from 'react'\r\nimport myImage from \"../../images/pn1.jpg\";\r\nimport './panaroma.styles.css';\r\nconst Panaroma = ()=> {\r\n    return (\r\n      <div className='panaroma-container'>\r\n      <Pannellum\r\n      width=\"800px\"\r\n      height=\"400px\"\r\n      image={myImage}\r\n      pitch={10}\r\n      yaw={180}\r\n      hfov={500}\r\n      autoLoad\r\n      author=\"\"\r\n      title=\"\"\r\n      orientationOnByDefault={false}\r\n      draggable\r\n      keyboardZoom\r\n      mouseZoom\r\n      preview=\"\"      \r\n      previewAuthor=\"\"\r\n      previewTitle=\"\"\r\n      showControls\r\n      showFullscreenCtrl\r\n      showZoomCtrl\r\n      onLoad={()=>{console.log(\"panorama loaded\");}}\r\n      onScenechange={(id)=>{console.log(\"Scene has change on \" + id);}}\r\n      onScenechangefadedone={()=>{console.log(\"panorama loaded\");}}\r\n      onError={(err)=>{console.log(\"Error\" , err);}}\r\n      onErrorcleared={()=>{console.log(\"Error Cleared\");}}\r\n      onMousedown={(evt)=>{console.log(\"Mouse Down\" , evt);}}\r\n      onMouseup={(evt)=>{console.log(\"Mouse Up\", evt);}}\r\n      onTouchstart={(evt)=>{console.log(\"Touch Start\", evt);}}\r\n      onTouchend={(evt)=>{console.log(\"Touch End\", evt);}}\r\n      hotspotDebug={false}\r\n  >\r\n      {/* <Pannellum.Hotspot \r\n      type=\"info\"\r\n      pitch={11}\r\n      yaw={-167}\r\n      text=\"Info Hotspot Text 3\"\r\n      URL=\"https://github.com/farminf\"\r\n      />\r\n\r\n      <Pannellum.Hotspot \r\n      type=\"custom\"\r\n      pitch={31}\r\n      yaw={150}\r\n      handleClick={(evt , args) => this.hanldeClickImage(evt , args)}\r\n      handleClickArg={{ \"name\":\"test\" }}\r\n      /> */}\r\n\r\n  </Pannellum>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Panaroma\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Panaroma from './component/panaroma/panaroma.component';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Panaroma/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}